@model Crunchers.Models.MakeOrderViewModel
<script>
function showPickUp() {
  document.getElementById("deliver").hidden = document.getElementById("showPickUp").checked;
      document.getElementById("pickUp").hidden = !document.getElementById("showPickUp").checked;
}
</script>
<style>
.switch {
  position: relative;
  display: inline-block;
  width: 60px;
  height: 34px;
}

.switch input { 
  opacity: 0;
  width: 0;
  height: 0;
}

.slider {
  position: absolute;
  cursor: pointer;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: #ccc;
  -webkit-transition: .4s;
  transition: .4s;
}

.slider:before {
  position: absolute;
  content: "";
  height: 26px;
  width: 26px;
  left: 4px;
  bottom: 4px;
  background-color: white;
  -webkit-transition: .4s;
  transition: .4s;
}

input:checked + .slider {
  background-color: #2196F3;
}

input:focus + .slider {
  box-shadow: 0 0 1px #2196F3;
}

input:checked + .slider:before {
  -webkit-transform: translateX(26px);
  -ms-transform: translateX(26px);
  transform: translateX(26px);
}

/* Rounded sliders */
.slider.round {
  border-radius: 34px;
}

.slider.round:before {
  border-radius: 50%;
}
</style>
<label class="switch">
    <input type="checkbox" id="showPickUp" onclick="showPickUp()">
    <span class="slider round"></span>
</label>
@using (Html.BeginForm("Index", "Order", FormMethod.Post, new {@class = "form-horizontal", role = "form", id = "deliver"}))
{
    <h4>Доставка</h4>
    <hr/>
    @Html.AntiForgeryToken()

    @Html.HiddenFor(x => x.MakeDeliverOrder.NameRu)
    <div class="form-group">
        @Html.LabelFor(m => m.MakeDeliverOrder.Name, new {@class = "col-md-2 control-label"})
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.MakeDeliverOrder.Name, new {@class = "form-control"})
            @Html.ValidationMessageFor(m => m.MakeDeliverOrder.Name, "", new {@class = "text-danger"})
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.MakeDeliverOrder.Email, new {@class = "col-md-2 control-label"})
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.MakeDeliverOrder.Email, new {@class = "form-control", Value = $"{User.Identity.Name}"})
            @Html.ValidationMessageFor(m => m.MakeDeliverOrder.Email, "", new {@class = "text-danger"})
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.MakeDeliverOrder.PhoneNumber, new {@class = "col-md-2 control-label"})
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.MakeDeliverOrder.PhoneNumber, new {@class = "form-control"})
            @Html.ValidationMessageFor(m => m.MakeDeliverOrder.PhoneNumber, "", new {@class = "text-danger"})
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.MakeDeliverOrder.Address, new {@class = "col-md-2 control-label"})
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.MakeDeliverOrder.Address, new {@class = "form-control"})
            @Html.ValidationMessageFor(m => m.MakeDeliverOrder.Address, "", new {@class = "text-danger"})
        </div>
        <text style="color: #79818a; font-size: 10px">*ул. (название улицы), д. (номер дома), кв. (номер квартитры)</text>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.MakeDeliverOrder.ComfortDate, new {@class = "col-md-2 control-label"})
        <div class="col-md-10">
            @Html.EditorFor(m => m.MakeDeliverOrder.ComfortDate)
            @Html.ValidationMessageFor(m => m.MakeDeliverOrder.ComfortDate, "", new {@class = "text-danger"})
        </div>
        <text style="color: #79818a; font-size: 10px">*не позднее чем @DateTime.Now.Add(new TimeSpan(31,0,0,0)).ToShortDateString()</text>
    </div>
    <div class="form-group">
        <div class="col-md-10">
            @Html.LabelFor(m => m.MakeDeliverOrder.FromTime, new {@class = "col-md-2 control-label"})
            @Html.TextBoxFor(m => m.MakeDeliverOrder.FromTime, new {@class = "form-control"})
            @Html.ValidationMessageFor(m => m.MakeDeliverOrder.FromTime, "", new {@class = "text-danger"})
        </div>
        <div class="col-md-10">
            @Html.LabelFor(m => m.MakeDeliverOrder.ToTime, new {@class = "col-md-2 control-label"})
            @Html.TextBoxFor(m => m.MakeDeliverOrder.ToTime, new {@class = "form-control"})
            @Html.ValidationMessageFor(m => m.MakeDeliverOrder.ToTime, "", new {@class = "text-danger"})
            <text style="color: #79818a; font-size: 10px">*служба доставки работает от 7 до 18</text>
        </div>
        

    </div>

    <div class="form-group">
        <div class="col-md-10">
            @Html.LabelFor(m => m.MakeDeliverOrder.CardNumber, new {@class = "col-md-2 control-label"})
            @Html.TextBoxFor(m => m.MakeDeliverOrder.CardNumber, new {@class = "form-control"}) <text style="color: #79818a; font-size: 10px">*оставьте поле пустым, чтобы не использовать оплату картой и оплатить позднее</text>
            @Html.ValidationMessageFor(m => m.MakeDeliverOrder.CardNumber, "", new {@class = "text-danger"})
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Подтвердить информацию о заказе" class="btn btn-default"/>
        </div>
    </div>
}


    @using (Html.BeginForm("Index", "Order", FormMethod.Post, new {@class = "form-horizontal", role = "form", id = "pickUp", hidden = ""}))
    {
        if (!Model.PointsOfPickUp.Any())
        {
            <text>К сожалению, в вашем городе нет точек самовывоза.</text>
        }
        else
        {
            @Html.AntiForgeryToken()
        @Html.HiddenFor(x => x.MakePickUpOrder.NameRu)
        <h4>Самовывоз</h4>
        <hr/>
        <div class="form-group">
            @Html.LabelFor(m => m.MakePickUpOrder.Name, new {@class = "col-md-2 control-label"})
            <div class="col-md-10">
                @Html.TextBoxFor(m => m.MakePickUpOrder.Name, new {@class = "form-control"})
                @Html.ValidationMessageFor(m => m.MakePickUpOrder.Name, "", new {@class = "text-danger"})
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.MakePickUpOrder.Email, new {@class = "col-md-2 control-label"})
            <div class="col-md-10">
                @Html.TextBoxFor(m => m.MakePickUpOrder.Email, new {@class = "form-control", Value = $"{User.Identity.Name}"})
                @Html.ValidationMessageFor(m => m.MakePickUpOrder.Email, "", new {@class = "text-danger"})
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.MakePickUpOrder.PhoneNumber, new {@class = "col-md-2 control-label"})
            <div class="col-md-10">
                @Html.TextBoxFor(m => m.MakePickUpOrder.PhoneNumber, new {@class = "form-control"})
                @Html.ValidationMessageFor(m => m.MakePickUpOrder.PhoneNumber, "", new {@class = "text-danger"})
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.MakePickUpOrder.PointOfPickUp, new {@class = "col-md-2 control-label"})
            <div class="col-md-10">
                @foreach (var point in Model.PointsOfPickUp)
                {
                    @Html.RadioButtonFor(model => model.MakePickUpOrder.PointOfPickUp, point.Address)
                    @point.Address<br/>
                }
                @Html.ValidationMessageFor(m => m.MakePickUpOrder.PointOfPickUp, "", new {@class = "text-danger"})
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-10">
                @Html.LabelFor(m => m.MakePickUpOrder.CardNumber, new {@class = "col-md-2 control-label"})
                @Html.TextBoxFor(m => m.MakePickUpOrder.CardNumber, new {@class = "form-control"}) <text style="color: #79818a; font-size: 10px">*оставьте поле пустым, чтобы не использовать оплату картой и оплатить позднее</text>
                @Html.ValidationMessageFor(m => m.MakePickUpOrder.CardNumber, "", new {@class = "text-danger"})

            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Подтвердить информацию о заказе" class="btn btn-default"/>
            </div>
        </div>
        }
        
    }
