@using Microsoft.AspNet.Identity
@using Newtonsoft.Json
@model Crunchers.Controllers.ShoppingCartController.ShoppingCartResponse
<script>
function minusFromCart(isLocal,productId,value) {
   $("#LoadingImage").show();
    if (isLocal){
        let ls = localStorage.getItem('localCart');
              if (ls==null || ls=="")
                  {
                      localStorage.setItem("localCart","{}");
                      ls = localStorage.getItem('localCart')
                      
                  }
              let cart = JSON.parse(ls);
              if (cart[productId]==null ||cart[productId]<0 ){
                  cart[productId]=0;
              }
              cart[productId]=value;
              if (cart[productId]<=0)
                  {
                      delete cart[productId];
                  }
        
        localStorage.setItem('localCart',JSON.stringify(cart));
        $("#LoadingImage").hide();
        alert('Количество товара успешно изменено');
          location.href="/ShoppingCart?localCartJson="+localStorage.getItem('localCart');
    }
    else {
        let ls = localStorage.getItem('localCart');
                      if (ls==null || ls=="")
                          {
                              localStorage.setItem("localCart","{}");
                              ls = localStorage.getItem('localCart')
                              
                          }
                      let cart = JSON.parse(ls);
                      if (cart[productId]==null ||cart[productId]<0){
                          cart[productId]=0;
                      }
                      cart[productId]=value;
                      if (cart[productId]<=0)
                      {
                          delete cart[productId];
                      } 
                      localStorage.setItem('localCart',JSON.stringify(cart));
                
         $.ajax({
                              type: "POST",
                              url: '@Url.RouteUrl(new {controller = "ShoppingCart", action = "ChangeCart"})?productId='+productId+'&value='+value,
                              data: { },
                              dataType: 'json',
                              timeout: 15000,
                              success: function (correct) {
                                  $("#LoadingImage").hide();
                                  alert('Количество товара успешно изменено');
                                  location.href="/ShoppingCart?localCartJson="+localStorage.getItem('localCart');   
                              },
                              error: function(inc) {
                                  $("#LoadingImage").hide();
                                  alert('Произошла ошибка');
                                  location.href="/ShoppingCart?localCartJson="+localStorage.getItem('localCart');        
                              }
                          });
         
    }
}

function plusToCart(isLocal,productId,value) {
   $("#LoadingImage").show();
    if (isLocal){
        let ls = localStorage.getItem('localCart');
              if (ls==null || ls=="")
                  {
                      localStorage.setItem("localCart","{}");
                      ls = localStorage.getItem('localCart')
                      
                  }
              let cart = JSON.parse(ls);
              if (cart[productId]==null ||cart[productId]<0){
                  cart[productId]=0;
              }
              cart[productId]=value;
        
        localStorage.setItem('localCart',JSON.stringify(cart));
        $("#LoadingImage").hide();
        alert('Количество товара успешно изменено');
          location.href="/ShoppingCart?localCartJson="+localStorage.getItem('localCart');
    }
    else {
        let ls = localStorage.getItem('localCart');
                      if (ls==null || ls=="")
                          {
                              localStorage.setItem("localCart","{}");
                              ls = localStorage.getItem('localCart')
                              
                          }
                      let cart = JSON.parse(ls);
                      if (cart[productId]==null ||cart[productId]<0){
                          cart[productId]=0;
                      }
                      cart[productId]=value;
                      localStorage.setItem('localCart',JSON.stringify(cart));
                
         $.ajax({
                              type: "POST",
                              url: '@Url.RouteUrl(new {controller = "ShoppingCart", action = "ChangeCart"})?productId='+productId+'&value='+value,
                              data: { },
                              dataType: 'json',
                              timeout: 15000,
                              success: function (correct) {
                                  $("#LoadingImage").hide();
                                  alert('Количество товара успешно изменено');
                                  location.href="/ShoppingCart?localCartJson="+localStorage.getItem('localCart');   
                              },
                              error: function(inc) {
                                  $("#LoadingImage").hide();
                                  alert('Произошла ошибка');
                                  location.href="/ShoppingCart?localCartJson="+localStorage.getItem('localCart');        
                              }
                          });
         
    }
}
function toOrder(cart,localCart,price) {
    let order = Object.assign(localCart, cart);
    localStorage.setItem("orderCart",JSON.stringify(order));
  localStorage.setItem('price',price);
  location.href="/order?nameRu="+localStorage.getItem('city');
   
}
</script>
<style>
    .my-class {
            color: orange !important;
          } 
</style>
@{
    var isLocal = User?.Identity?.GetUserId() == null;
    var price = 0;
    <h3>Корзина:</h3>
    <form>
        @{
            foreach (var product in Model.CartProducts)
            {
                <div style="border:3px solid orange; border-radius: 7px">
                    @{
                        <a href="/Catalog/Product?productId=@product.ProductId">
                            <img src="@product.ImageLink" alt="Изображение отсутствует " width="100" height="100"/>
                        </a>
                        <a class="my-class" href="/Catalog/Product?productId=@product.ProductId">@product.ProductName</a>

                        if (Model.Cart.ContainsKey(product.ProductId))
                        {
                            <a class="btn btn-default" onclick="minusFromCart(false,@product.ProductId,@Model.Cart[product.ProductId]-1)">-</a>
                            <strong>@Model.Cart[product.ProductId]</strong>
                            <a class="btn btn-default" onclick="plusToCart(false,@product.ProductId,@Model.Cart[product.ProductId]+1)">+</a>
                            <text>x@(product.ProductPrice)руб. = @(Model.Cart[product.ProductId] * product.ProductPrice) руб.</text>
                            price += Model.Cart[product.ProductId] * product.ProductPrice;
                        }
                        else
                        {
                            <a class="btn btn-default" onclick="minusFromCart(true,@product.ProductId,@Model.LocalCart[product.ProductId]-1)">-</a>
                            <strong>@Model.LocalCart[product.ProductId]</strong>
                            <a class="btn btn-default" onclick="plusToCart(true,@product.ProductId,@Model.LocalCart[product.ProductId]+1)">+</a>
                            <text>x@(product.ProductPrice)руб. = @(Model.LocalCart[product.ProductId] * product.ProductPrice) руб.</text>
                            price += Model.LocalCart[product.ProductId] * product.ProductPrice;
                        }
                    }
                </div>
                <br/>
            }
        }
    </form>
    if (price == 0)
    {
        <h1>В вашей корзине пока нет товаров.</h1>
    }
    else
    {
        <hr/>
        <strong>Итого: @price руб.</strong>
        var cart = JsonConvert.SerializeObject(Model.Cart);
        var local = JsonConvert.SerializeObject(Model.LocalCart);
        <a class="btn btn-default" onclick="toOrder(@cart,@local,@price)">Оформить заказ</a>
    }
}