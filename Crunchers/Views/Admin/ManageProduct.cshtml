@using System.Activities.Expressions
@model Crunchers.Controllers.AdminController.ProductAdminResponse
<div id="LoadingImage" style="display:none;background-color: rgb(255, 255, 255); opacity: 0.7; width: 100%; height: 100%; position: absolute; top: 0px; left: 0px; z-index: 99999;">
    <img style="display: block;margin-left: auto;margin-right: auto" src="https://igc-market.ru/images/loading.gif"/>
</div>
<script>
    let urlParams = new URLSearchParams(window.location.search);
    function ChangeProduct() {
         let inpObj = document.getElementById("productInfo");
          let infoObj=document.getElementById("newCharacteristics");
                                  if (!inpObj.checkValidity() || !infoObj.checkValidity()) {
                                  } else {
       var values = [];
       var characteristicNodes = document.getElementById('newCharacteristics').getElementsByTagName('input');
       var i;
       for (i = 0; i < characteristicNodes.length; i++) {
         values.push(characteristicNodes[i].value);
       }
        
        let imageLink = document.getElementById("productImageInput").value;
        let productName = document.getElementById("productNameInput").value;
        let productPrice = document.getElementById("productPriceInput").value;
        let categoryId=urlParams.get('categoryId');
        let productId=urlParams.get('productId');
        $("#LoadingImage").show();
       $.ajax({
                type: "POST",
                url: '@Url.RouteUrl(new {controller = "Admin", action = "ChangeProduct"})?productId='+productId+'&imageLink='+imageLink+'&productName='+productName+'&productPrice='+productPrice+'&categoryId='+categoryId,
                data: JSON.stringify(values),
                dataType: 'json',
                timeout: 15000,
                success: function (data) {
                    $("#LoadingImage").hide();
                    alert('Товар успешно изменен');
                    location.reload();     
                },
                error: function(inc) {
                    $("#LoadingImage").hide();
                    alert('Произошла ошибка');
                    location.reload(); 
                }
            });
    }}
</script>
<style>
      .clean-block.clean-form form {
          border-top: 2px solid orange!important;
          background-color: #fff;
          max-width: 500px;
          margin: auto;
          padding: 40px;
          box-shadow: 0 2px 10px rgba(0,0,0,.075);
      }


      input:focus {
        outline: none;
      }
      
      .fox {
        font-size: 18px;
        padding: 10px 10px 10px 5px;
        display: block;
        width: 300px;
        border: none;
        border-bottom: 1px solid orange !important;
        margin-left: auto;
        margin-right: auto;
        text-align: center;
      }
      
      button, input {
        overflow: visible;
      }
      
      button, input, optgroup, select, textarea {
        margin: 0;
        font-family: inherit;
        font-size: inherit;
        line-height: inherit;
      }
    
      

      .clean-navbar.fixed-top + .page {
        padding-top: 5rem;
      }
      
      .clean-navbar.fixed-top + .page {
        padding-top: 62px;
      }
      
      .clean-block.dark {
              background-color: #ffffff;
      }
      
      .container {
        max-width: 1140px;
      } 
      
      .container {
        width: 100%;
        padding-right: 15px;
        padding-left: 15px;
        margin-right: auto;
        margin-left: auto;
      }
      
      .clean-block .block-heading {
        padding-top: 50px;
        margin-bottom: 40px;
        text-align: center;
      }
      
      .clean-block .block-heading {
        padding-top: 80px;
      }
      
      .clean-block .block-heading {
        padding-top: 50px;
        margin-bottom: 40px;
        text-align: center;
      }
      
      .text-info {
        color: orange!important;
        font-weight: normal !important;
      }
      
      .h1, .h2, .h3, .h4, .h5, .h6, h1, h2, h3, h4, h5, h6 {
        margin-bottom: .5rem;
        font-weight: 500;
        line-height: 1.2;
      }
      
      h1, h2, h3, h4, h5, h6 {
        margin-top: 0;
        margin-bottom: .5rem;
      }
      
      .clean-block .block-heading {
        padding-top: 50px;
        margin-bottom: 40px;
        text-align: center;
      }
      
      .clean-block .block-content {
        padding: 40px;
      }
      
      .clean-block .block-content, .clean-block .content {
        box-shadow: 0 2px 10px rgba(0,0,0,.075);
        background-color: #fff;
      }
      
      .clean-block.clean-faq .faq-item {
        margin-bottom: 20px;
      }
      
      .my-class {
        color: orange !important;
      }  
      
      .form-group {
            text-align: center;
            border-top: 2px solid orange!important;
                      background-color: #ffffff;
                      max-width: 500px;
                      margin: auto;
                      padding: 40px;
                      box-shadow: 0 2px 10px rgba(0,0,0,.075);
                      
        margin-left: auto;
        margin-right: auto;
            }  
  
</style>

<form id="productInfo">
    
@{
    var productGroup = Model.Products.GroupBy(x => x.ProductId);
    <section class= "clean-block clean-blog-list dark">
        <div class="container">
            <div class="block-heading">
                <h1 class="text-i">@Model.Products.FirstOrDefault().ProductName</h1>
            </div>
            <div class="form-group">
                <form>
                    <h4>
                        <p><label style="font-weight: inherit !important;" class="text-info" for="productImageInput">Ссылка на изображение:</label>
                            <input class="fox" id="productImageInput" maxlength="255" value="@Model.Products.FirstOrDefault().ImageLink"/>
                        </p>
                    </h4>
                    <h4>
                        <p><label style="font-weight: inherit !important;" class="text-info" for="productNameInput">Название товара:</label>
                            <input id="productNameInput" class="fox" value="@Model.Products.FirstOrDefault().ProductName" minlength="3" maxlength="100"  required/>
                        </p></h4>
                    <h4>
                        <p><label style="font-weight: inherit !important;" class="text-info" for="productPriceInput">Цена:</label>
                           <input id="productPriceInput" class="fox" type="number" max="99999999" required value="@Model.Products.FirstOrDefault().ProductPrice"required/>
                        </p></h4>
                </form>
                <form id="newCharacteristics">
                   @{var i = 0;
                           var characteristics = Model.Characteristics.ToList();
                           <form id='newCharacteristics'>
                               
                                   @{if (characteristics.Count != 0)
                                   {
                                       foreach (var productChar in Model.Products)
                                       {
                                           <h4><label style="font-weight: inherit !important;" class="text-info">@characteristics[i].CharacteristicName</label></h4>
                                           if (characteristics[i].CharacteristicType == "Строковое значение")
                                           {
                                               <input class="fox" id="Name=@characteristics[i].CharacteristicId" pattern="[^_]+" maxlength="100"  value="@productChar.ValueToCharName.Item2"/>
                                           }
                                           else
                                           {
                                               <input class="fox" id="Name=@characteristics[i].CharacteristicId" type="number" max="99999999" min="0" required  value="@productChar.ValueToCharName.Item2"/>
                                               if (!string.IsNullOrEmpty(characteristics[i].Unit))
                                               {
                                                   <h4><label style="font-weight: inherit !important;" class="text-info">(в @(characteristics[i].Unit))</label></h4>
                                               }
                                               <h4><label style="font-weight: inherit !important;" class="text-info">(0 в случае отсутствия)</label></h4>
                                           }
                                           i++;
                                           <br/>
                                       }
                                       for (var j = i + 1; j < characteristics.Count; j++)
                                       {
                                           <h4><label style="font-weight: inherit !important;" class="text-info">@characteristics[i].CharacteristicName</label></h4>
                                           if (characteristics[i].CharacteristicType == "Строковое значение")
                                           {
                                               <input class="fox" id="Name=@characteristics[i].CharacteristicId" pattern="[^_]+" maxlength="100"/>
                                           }
                                           else
                                           {
                                               <input class="fox" id="Name=@characteristics[i].CharacteristicId" type="number" max="99999999" min="0" required />
                                               if (!string.IsNullOrEmpty(characteristics[i].Unit))
                                               {
                                                   <h4><label style="font-weight: inherit !important;" class="text-info">(в @(characteristics[i].Unit))</label></h4>
                                               }
                                               <h4><label style="font-weight: inherit !important;" class="text-info">(0 в случае отсутствия)</label></h4>
                                           }
                                       }
                                   }
                                   else
                                   {
                                       <h4><label style="font-weight: inherit !important;" class="text-info">Добавьте какие-либо характериситики.</label></h4>
                                   }
                                   }
                                   
                   
                           </form>
                       <h4><a class="my-class" onclick="ChangeProduct()">Изменить товар</a></h4>
                       }</form>
            </div>
        </div>
    </section>
}
</form>

