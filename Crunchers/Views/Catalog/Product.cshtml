@using Microsoft.Ajax.Utilities
@model Crunchers.Controllers.CatalogController.ProductCatalogResponse
<div id="LoadingImage" style="display:none;background-color: rgb(255, 255, 255); opacity: 0.7; width: 100%; height: 100%; position: absolute; top: 0px; left: 0px; z-index: 99999;">
    <img style="display: block;margin-left: auto;margin-right: auto" src="https://igc-market.ru/images/loading.gif"/>
</div>
<script>
let urlParams = new URLSearchParams(window.location.search);
function AddReview() {
    let reviewText = document.getElementById("newReview").value;
    let productId= urlParams.get('productId');
    $("#LoadingImage").show();
                $.ajax({
                    type: "POST",
                    url: '@Url.RouteUrl(new {controller = "Catalog", action = "AddReview"})?productId='+productId,
                    data: JSON.stringify(reviewText),
                    dataType: 'json',
                    timeout: 15000,
                    success: function (correct) {
                        $("#LoadingImage").hide();
                        alert('Отзыв успешно добавлен');
                        location.reload();      
                    },
                    error: function(inc) {
                        $("#LoadingImage").hide();
                        alert('Произошла ошибка');
                        location.reload(); 
                    }
                });
}
function DeleteReview(reviewId) {
    $("#LoadingImage").show();
                $.ajax({
                    type: "POST",
                    url: '@Url.RouteUrl(new {controller = "Catalog", action = "DeleteReview"})?reviewId='+reviewId,
                    data: {},
                    dataType: 'json',
                    timeout: 15000,
                    success: function (correct) {
                        $("#LoadingImage").hide();
                        alert('Отзыв успешно удален');
                        location.reload();      
                    },
                    error: function(inc) {
                        $("#LoadingImage").hide();
                        alert('Произошла ошибка');
                        location.reload(); 
                    }
                });
}
function AddMark() {
    let mark = document.getElementById("markInput").value;
    let productId= urlParams.get('productId');
    $("#LoadingImage").show();
                $.ajax({
                    type: "POST",
                    url: '@Url.RouteUrl(new {controller = "Catalog", action = "AddMark"})?productId='+productId,
                    data: JSON.stringify(mark),
                    dataType: 'json',
                    timeout: 15000,
                    success: function (correct) {
                        $("#LoadingImage").hide();
                        alert('Оценка успешно добавлна');
                        location.reload();      
                    },
                    error: function(inc) {
                        $("#LoadingImage").hide();
                        alert('Произошла ошибка');
                        location.reload(); 
                    }
                });
}
function DeleteMark(markId) {
    $("#LoadingImage").show();
                $.ajax({
                    type: "POST",
                    url: '@Url.RouteUrl(new {controller = "Catalog", action = "DeleteMark"})?markId='+markId,
                    data: {},
                    dataType: 'json',
                    timeout: 15000,
                    success: function (correct) {
                        $("#LoadingImage").hide();
                        alert('Оценка успешно удалена');
                        location.reload();      
                    },
                    error: function(inc) {
                        $("#LoadingImage").hide();
                        alert('Произошла ошибка');
                        location.reload(); 
                    }
                });
}
</script>
@{
    var productInfo = Model.Product.FirstOrDefault();
    var username = User?.Identity?.Name ?? "";
    var mark = Model.Marks.Where(x => x.UserName == username).FirstOrDefault();
    <h1>@productInfo.ProductName</h1>
    <img src="@productInfo.ImageLink" alt="Изображение не найдено"/>
    <h3>Характеристики товара:</h3>
    foreach (var productChar in Model.Product.Join(Model.Characteristics, x => x.CharacteristicId, y => y.CharacteristicId, (x, y) => new {ProductChar = x, y.CharacteristicName}))
    {
        <text>@productChar.CharacteristicName: @productChar.ProductChar.ValueToCharName.Item2</text>
        if (productChar.ProductChar.ValueToCharName.Item1 != "")
        {
            <text>(в @productChar.ProductChar.ValueToCharName.Item1)</text>
        }
        <br/>
    }
    <hr/>
    <h3>С этим товаром покупают:</h3>
    <form>
        @foreach (var product in Model.BuyWithThisProduct)
        {
            <form>
                <a href="/Catalog/Product?productId=@product.ProductId">
                    <img src="@product.ImageLink" alt="Изображение отсутствует " width="100" height="100"/>
                </a>
                <a href="/Catalog/Product?productId=@product.ProductId">@product.ProductName</a>
                <text>@product.ProductPrice</text>
            </form>
        }
    </form>
    <hr/>
    <h3>Рейтинг товара:</h3>
    if (productInfo.RatingsAmount == 0)
    {
        <h3>У данного товара пока нет оценок</h3>
    }
    else
    {
        <h3>Оценка - @(Math.Round((double) productInfo.RatingSum / productInfo.RatingsAmount)) / 10</h3>
    }
    <br/>
    <h3>Отзывы</h3>
    if (!Model.Reviews.Any())
    {
        <text>На данный товар пока нет обзоров</text>
    }
    else
    {
        foreach (var review in Model.Reviews.Join(Model.Marks, x => x.UserName, y => y.UserName, (x, y) => new {x, y}).OrderBy(x => x.x.ReviewDate))
        {
            <label for="review@(review.x.ReviewId)">@review.x.UserName :</label>
            <input id="review@(review.x.ReviewId)" value="@review.x.ReviewText" style="border: 0" readonly="readonly"/>
            <br/>
            <text>отзыв оставлен @review.x.ReviewDate.ToString("dd/MM/yyyy HH:mm:ss")</text>
            <text>@review.y.Mark / 10</text>
            if (review.x.UserName == username)
            {
                <a onclick="DeleteReview(@(review.x.ReviewId))">Удалить отзыв</a>
            }
            <br/>
        }
        var userReview = Model.Reviews.Where(x => x.UserName == username).FirstOrDefault();
        if (userReview != null && mark == null)
        {
            <label for="review@(userReview.ReviewId)">@userReview.UserName :</label>
            <input id="review@(userReview.ReviewId)" value="@userReview.ReviewText" style="border: 0" readonly="readonly"/>
            <br/>
            <text>отзыв оставлен @userReview.ReviewDate.ToString("dd/MM/yyyy HH:mm:ss");</text>
            <br/>
            <text>Ваш отзыв виден только вам. Поставьте оценку товару, чтобы обзор стал виден остальным посетителям сайта</text>
            <a onclick="DeleteReview(@(userReview.ReviewId))">Удалить отзыв</a>
        }
    }
    if (!Model.Reviews.Any(x => x.UserName == username) && username != "")
    {
        <form>
            <p>
                <b>Введите ваш отзыв:</b>
            </p>
            <p>
                <textarea id = "newReview" rows="10" cols="45" name="text"></textarea>
            </p>
            <a onclick="AddReview()">Добавить отзыв</a>
        </form>
    }
    <br/>
    if (username != "")
    {
        <text>Ваша оценка:</text>
        if (mark != null)
        {
            <text>@mark.Mark</text>
            <a onclick="DeleteMark(@(mark.MarkId))">Удалить оценку</a>
        }
        else
        {
            <select id="markInput">
                <option selected="selected">Нет</option>
                <option>1</option>
                <option>2</option>
                <option>3</option>
                <option>4</option>
                <option>5</option>
                <option>6</option>
                <option>7</option>
                <option>8</option>
                <option>9</option>
                <option>10</option>
            </select>
            <a onclick="AddMark()">Добавить оценку</a>
        }
    }
}