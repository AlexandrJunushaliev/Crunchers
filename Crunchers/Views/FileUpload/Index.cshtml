@model Crunchers.Models.FileUploadModel

@using (Html.BeginForm("UploadFiles", "FileUpload", FormMethod.Post, new {enctype = "multipart/form-data"}))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr/>
        @Html.ValidationSummary(true, "", new {@class = "text-danger"})
        <div class="form-group">
            @Html.LabelFor(model => model.File, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.File, new {htmlAttributes = new {@class = "form-control", @type = "file"}})
                @Html.ValidationMessageFor(model => model.File, "", new {@class = "text-danger"})
            </div>
        </div>
        <input type="hidden" name="categoryId" value="@ViewBag.categoryId"/>
        <input type="submit" value="Upload" class="btn btn-primary"/>
        @ViewBag.fileStatus
    </div>
}

@if (ViewBag.link != null && ViewBag.categoryId != null)
{
    <form method="get" action="/Admin/ManageCategoryProducts">
        <input type="hidden" name="categoryId" value="@ViewBag.categoryId"/>
        <input type="hidden" name="imageLink" value="@ViewBag.link" }/>
        <input type="submit" value="Return to fill product information"/>
    </form>
}

<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>